{"version":3,"sources":["../webpack/bootstrap 4b37b6621aee4d13658b","../node_modules/xml-parser/index.js","utils/Tree.worker.js","../node_modules/@nindaff/ascii-tree/lib/index.js","../node_modules/@nindaff/ascii-tree/lib/Tree.js","../node_modules/@nindaff/ascii-tree/lib/Bitmap.js","../node_modules/@nindaff/ascii-tree/lib/Node.js","../node_modules/debug/src/browser.js","../node_modules/process/browser.js","../node_modules/debug/src/debug.js","../node_modules/ms/index.js","../node_modules/@nindaff/ascii-tree/lib/Text.js"],"names":["tree","Tree","root","value","send","self","postMessage","name","data","handleUpdate","input","format","JSON","parse","parseXML","update","Object","assign","options","render","err","onmessage","event"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC5DA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACnKA,0CAEA,GAAMA,MAAO,GAAIC,CAAA,2DAAJ,CAAS,CACpBC,KAAM,CACJC,MAAO,EADH,CADc,CAAT,CAAb,CAMA,GAAMC,MAAO,QAAPA,KAAO,MAAQ,CACnBC,KAAKC,WAAL,CAAiB,CACfC,KAAM,QADS,CAEfC,SAFe,CAAjB,EAID,CALD,CAOA,GAAMC,cAAe,QAAfA,aAAe,MAAQ,CAC3B,GAAI,CACF,GAAIP,MAA4BM,KAAKE,KAArC,CACA,GAAIF,KAAKG,MAAL,GAAgB,MAApB,CAA4B,CAC1BT,KAAOU,KAAKC,KAAL,CAAWX,IAAX,CAAP,CACD,CAFD,IAEO,CACL;AACA,kDAAAY,CAASZ,IAAT,EACD,CAEDF,KAAKe,MAAL,CAAYC,OAAOC,MAAP,CAAc,CACxBf,SADwB,CAAd,CAETM,KAAKU,OAFI,CAAZ,EAIAd,KAAKJ,KAAKmB,MAAL,EAAL,EACD,CAAC,MAAOC,GAAP,CAAY,CAAE,CACjB,CAhBD,CAkBAf,KAAKgB,SAAL,CAAiB,eAAS,CACxB,GAAIC,MAAMd,IAAN,CAAWD,IAAX,GAAoB,QAAxB,CAAkC,CAChCE,aAAaa,MAAMd,IAAN,CAAWA,IAAxB,EACD,CACF,CAJD,C;;;;;;;ACpCA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,sCAAsC,uCAAuC,gBAAgB,E;;;;;;;ACf7F;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,kBAAkB;AAC/B,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,KAAK;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,KAAK;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,QAAQ;AACjD;;AAEA,qBAAqB,kBAAkB;AACvC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA,KAAK;;AAEL;AACA;AACA;AACA,uB;;;;;;;ACtPA;;AAEA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA,6CAA6C,EAAE,OAAO,IAAI,sBAAsB,MAAM,IAAI,EAAE;AAC5F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,yB;;;;;;;AC3DA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uB;;;;;;ACrHA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;ACxLA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;ACtLtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B,4BAA4B;AAC5B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACzMA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvJA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uB","file":"4b37b6621aee4d13658b.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/AsciiTree/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4b37b6621aee4d13658b","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('xml-parser');\n\n/**\n * Expose `parse`.\n */\n\nmodule.exports = parse;\n\n/**\n * Parse the given string of `xml`.\n *\n * @param {String} xml\n * @return {Object}\n * @api public\n */\n\nfunction parse(xml) {\n  xml = xml.trim();\n\n  // strip comments\n  xml = xml.replace(/<!--[\\s\\S]*?-->/g, '');\n\n  return document();\n\n  /**\n   * XML document.\n   */\n\n  function document() {\n    return {\n      declaration: declaration(),\n      root: tag()\n    }\n  }\n\n  /**\n   * Declaration.\n   */\n\n  function declaration() {\n    var m = match(/^<\\?xml\\s*/);\n    if (!m) return;\n\n    // tag\n    var node = {\n      attributes: {}\n    };\n\n    // attributes\n    while (!(eos() || is('?>'))) {\n      var attr = attribute();\n      if (!attr) return node;\n      node.attributes[attr.name] = attr.value;\n    }\n\n    match(/\\?>\\s*/);\n\n    return node;\n  }\n\n  /**\n   * Tag.\n   */\n\n  function tag() {\n    debug('tag %j', xml);\n    var m = match(/^<([\\w-:.]+)\\s*/);\n    if (!m) return;\n\n    // name\n    var node = {\n      name: m[1],\n      attributes: {},\n      children: []\n    };\n\n    // attributes\n    while (!(eos() || is('>') || is('?>') || is('/>'))) {\n      var attr = attribute();\n      if (!attr) return node;\n      node.attributes[attr.name] = attr.value;\n    }\n\n    // self closing tag\n    if (match(/^\\s*\\/>\\s*/)) {\n      return node;\n    }\n\n    match(/\\??>\\s*/);\n\n    // content\n    node.content = content();\n\n    // children\n    var child;\n    while (child = tag()) {\n      node.children.push(child);\n    }\n\n    // closing\n    match(/^<\\/[\\w-:.]+>\\s*/);\n\n    return node;\n  }\n\n  /**\n   * Text content.\n   */\n\n  function content() {\n    debug('content %j', xml);\n    var m = match(/^([^<]*)/);\n    if (m) return m[1];\n    return '';\n  }\n\n  /**\n   * Attribute.\n   */\n\n  function attribute() {\n    debug('attribute %j', xml);\n    var m = match(/([\\w:-]+)\\s*=\\s*(\"[^\"]*\"|'[^']*'|\\w+)\\s*/);\n    if (!m) return;\n    return { name: m[1], value: strip(m[2]) }\n  }\n\n  /**\n   * Strip quotes from `val`.\n   */\n\n  function strip(val) {\n    return val.replace(/^['\"]|['\"]$/g, '');\n  }\n\n  /**\n   * Match `re` and advance the string.\n   */\n\n  function match(re) {\n    var m = xml.match(re);\n    if (!m) return;\n    xml = xml.slice(m[0].length);\n    return m;\n  }\n\n  /**\n   * End-of-source.\n   */\n\n  function eos() {\n    return 0 == xml.length;\n  }\n\n  /**\n   * Check for `prefix`.\n   */\n\n  function is(prefix) {\n    return 0 == xml.indexOf(prefix);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xml-parser/index.js\n// module id = 0\n// module chunks = 0","import Tree from '@nindaff/ascii-tree';\nimport parseXML from 'xml-parser';\n\n/* eslint-disable no-restricted-globals */\n\nconst tree = new Tree({\n  root: {\n    value: '',\n  },\n});\n\nconst send = data => {\n  self.postMessage({\n    name: 'render',\n    data,\n  });\n};\n\nconst handleUpdate = data => {\n  try {\n    let root: SimpleNode | string = data.input;\n    if (data.format === 'json') {\n      root = JSON.parse(root);\n    } else {\n      // just to validate\n      parseXML(root);\n    }\n\n    tree.update(Object.assign({\n      root,\n    }, data.options));\n\n    send(tree.render());\n  } catch (err) {}\n};\n\nself.onmessage = event => {\n  if (event.data.name === 'update') {\n    handleUpdate(event.data.data);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/Tree.worker.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Tree = require('./Tree');\n\nObject.defineProperty(exports, 'default', {\n  enumerable: true,\n  get: function () {\n    return _interopRequireDefault(_Tree).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@nindaff/ascii-tree/lib/index.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Bitmap = require('./Bitmap');\n\nvar _Bitmap2 = _interopRequireDefault(_Bitmap);\n\nvar _Node = require('./Node');\n\nvar _Node2 = _interopRequireDefault(_Node);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Alignment type for tree nodes.\n\n\n// Tree options type\nconst resolveRoot = root => typeof root === 'string' ? _Node2.default.fromXML(root) : _Node2.default.fromSimpleNode(root);\n\nclass Tree {\n\n  /**\n   * Tree constructor.\n   * @param {Options} options\n   * @param {SimpleNode|String} options.root The root node of the tree json/xml.\n   * @param {Number} [options.space = 1] The space between nodes (to the right).\n   * @param {String} [options.vertical = '\\'] The vertical branch character.\n   * @param {String} [options.horizontal = '_'] The horizontal branch character.\n   * @param {Alignment} [options.align = 'center'] The text/branch alignment.\n   * @param {Number} [options.verticalHeight = 1] The number of vertical\n   *                                              characters between a node and\n   *                                              a horizontal branch.\n   *\n   */\n  constructor(options) {\n    this.space = options.space || 1;\n    this.vertical = (options.vertical || '|')[0];\n    this.horizontal = (options.horizontal || '_')[0];\n    this.verticalHeight = options.verticalHeight || 1;\n    this.alignment = options.align || 'center';\n\n    this._root = resolveRoot(options.root);\n    this._levels = this._root.getLevels();\n    this._dirty = true;\n  }\n\n  /**\n   * Get the horizontal alignment for a given `node`, based on `alignment`.\n   * @param {Node} node The node to calculate alignmemt for.\n   */\n  _alignX(node, width = node.text.width) {\n    if (this.alignment === 'left') {\n      return node.left;\n    }\n    return node.left + Math.floor((node.width - width) / 2);\n  }\n\n  /**\n   * Get the vertical alignment for a given `node`'s vertical branch connector,\n   * based on `alignment`.\n   * @param  {Node} node The node to calculate a vertical branch for.\n   * @return {Number}      Horizontal position of the vertical branch.\n   */\n  _alignVertical(node) {\n    const x = this._alignX(node);\n    if (this.alignment === 'left') {\n      return x;\n    }\n    return x + Math.floor(node.text.width / 2);\n  }\n\n  /**\n   * Draws a vertical branch starting at `y` for the given `node`.\n   * @param  {Bitmap} bitmap Bitmap to draw to.\n   * @param  {Node} node   The node to connect.\n   * @param  {Number} y      The vertical starting point for the branch.\n   */\n  _drawVertical(bitmap, node, y, extra = 0) {\n    const x = this._alignVertical(node);\n    const len = this.verticalHeight + extra;\n    for (let i = 0; i < len; i++) {\n      bitmap.writeString(x, y + i, this.vertical);\n    }\n  }\n\n  /**\n   * Draws a horiztonal branch at `y` from `start` to `end` based on\n   * `alignment`.\n   * @param  {Bitmap} bitmap The bitmap to draw to.\n   * @param  {Number} y      The vertical position to draw on.\n   * @param  {Number} start  The position to start at.\n   * @param  {Number} end    The position to end at.\n   */\n  _drawHorizontal(bitmap, y, start, end) {\n    for (let i = start; i <= end; i++) {\n      bitmap.writeString(i, y, this.horizontal);\n    }\n  }\n\n  /**\n   * Get the height of the tree including the branches.\n   * @return {Number}\n   */\n  height() {\n    const levelLen = this._levels.length;\n    const levelHeight = this._levels.reduce((a, level) => {\n      return a + Math.max(...level.map(n => n.text.height));\n    }, 0);\n\n    return levelHeight + (levelLen - 1) * (this.verticalHeight * 2);\n  }\n\n  /**\n   * Get the width of the tree.\n   * @return {Number}\n   */\n  width() {\n    return this._root.width;\n  }\n\n  /**\n   * Update a tree with `Options`.\n   * @param  {Options} options Same options as in constructor.\n   */\n  update(options) {\n    if (options.root) {\n      this._root = resolveRoot(options.root);\n      this._levels = this._root.getLevels();\n      this._dirty = true;\n    }\n\n    if (options.space) {\n      this.space = options.space;\n      this._dirty = true;\n    }\n\n    if (options.vertical) {\n      this.vertical = options.vertical;\n    }\n    if (options.horizontal) {\n      this.horizontal = options.horizontal;\n    }\n    if (options.verticalHeight) {\n      this.verticalHeight = options.verticalHeight;\n    }\n    if (options.align) {\n      this.alignment = options.align;\n    }\n  }\n\n  /**\n   * Calculate layout (box-modelish). A node's \"box\" is defined as the entire\n   * area in which its text and children inhabbit, plus a padding of `space` to\n   * the right. Widths and offsets for nodes are calculated starting at the\n   * bottom level, moving up. The width of a given node is defined as the\n   * width of all of its _direct_ children combined, or the width of its text\n   * (whichever is larger), plus `space` padding to the right. The offset of a\n   * given node is simply where the first character of the nodes box\n   * (from the left of the entire area) will begin. The offset is absolute, not\n   * relative to a nodes parent. The offset of a node is simply the combination\n   * of the widths of all of its previous siblings. Heights are not calculated\n   * as this can be pretty easily applied during render.\n   */\n  layout(force = false) {\n    if (!this._dirty && !force) {\n      return;\n    }\n\n    for (let i = this._levels.length - 1; i >= 0; i--) {\n      const level = this._levels[i];\n\n      for (let j = 0; j < level.length; j++) {\n        const node = level[j];\n\n        const childWidth = node.children.reduce((a, c) => a + c.width, 0);\n        node.width = Math.max(node.text.width, childWidth) + this.space;\n        node.left = 0;\n\n        // If not the first child, we have to calculate an offset and apply\n        // to all of the current `node`s children.\n        const prev = node.prevSib();\n        if (prev) {\n          const offset = prev.width + prev.left;\n          node.left = offset;\n\n          // Apply offset to children\n          node.forEachChild(child => {\n            child.left += offset;\n          });\n        }\n      }\n    }\n\n    this._dirty = false;\n  }\n\n  /**\n   * Render the tree to a string.\n   * @return {String}\n   */\n  render() {\n    // Layout, if neccessary.\n    this.layout();\n\n    const bitmap = new _Bitmap2.default(this.width(), this.height());\n    let verticalOffset = 0;\n\n    this._levels.forEach((level, y) => {\n      y += verticalOffset;\n\n      const levelHeight = Math.max(...level.map(n => n.text.height));\n\n      level.forEach(node => {\n        if (node.children.length) {\n          const start = this._alignVertical(node.children[0]);\n          // draw until the last child, or `node` -- in some instances, `node`\n          // will be wider than all of its children\n          const end = Math.max(this._alignVertical(node.children[node.children.length - 1]), this._alignVertical(node));\n\n          this._drawHorizontal(bitmap, y + this.verticalHeight + (levelHeight - 1), start, end);\n\n          // Draw a vertical branch above each child.\n          node.children.forEach(child => {\n            this._drawVertical(bitmap, child, y + this.verticalHeight + levelHeight);\n          });\n\n          // Draw vertical branch below node.\n          this._drawVertical(bitmap, node, y + node.text.height, levelHeight - node.text.height);\n        }\n\n        // bitmap.writeString(x, y, node.value);\n        node.text.lines.forEach((line, i) => {\n          let lineX = this._alignX(node, line.length);\n          bitmap.writeString(lineX, y + i, line);\n        });\n      });\n\n      verticalOffset += levelHeight - 1 + this.verticalHeight * 2;\n    });\n\n    return bitmap.toString();\n  }\n}\nexports.default = Tree;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@nindaff/ascii-tree/lib/Tree.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n\n/**\n * Bitmap - really a byte matrix internally.\n */\nclass Bitmap {\n\n  /**\n   * Initialize Bitmap with a `width` and `height`\n   */\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n    this._bitmap = new Array(height).fill(null).map(() => new Uint8Array(width).fill(32));\n  }\n\n  /**\n   * Determine if `x` and `y` are in bounds of the matrix.\n   */\n  _inBounds(x, y) {\n    return x >= 0 && x < this.width && y >= 0 && y < this.height;\n  }\n\n  /**\n   * Wrtie a number at position (x, y).\n   */\n  write(x, y, n) {\n    if (!this._inBounds(x, y)) {\n      throw new Error(`Bitmap: Position out of bounds`);\n    }\n    this._bitmap[y][x] = n;\n  }\n\n  /**\n   * Write a string starting at position (x, y).\n   */\n  writeString(x, y, str) {\n    for (let i = 0; i < str.length; i++) {\n      if (!this._inBounds(x + i, y)) {\n        throw new Error(`Bitmap: Character ${i} in \"${str}\" is out of bounds (${x + i}, ${y})`);\n      }\n      this.write(x + i, y, str.charCodeAt(i));\n    }\n  }\n\n  /**\n   * Get the string representation of the `Bitmap`.\n   */\n  toString() {\n    return this._bitmap.map(intArr => {\n      return intArr.reduce((s, c) => s + String.fromCharCode(c), '');\n    }).join('\\n');\n  }\n}\nexports.default = Bitmap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@nindaff/ascii-tree/lib/Bitmap.js\n// module id = 4\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _xmlParser = require('xml-parser');\n\nvar _xmlParser2 = _interopRequireDefault(_xmlParser);\n\nvar _Text = require('./Text');\n\nvar _Text2 = _interopRequireDefault(_Text);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// SimpleNodeObj and SimpleNode are simple ways of representing a Node-like\n// or Tree-like data-structure that can be easily transformed into a full `Node`\n\n\n// @see: SimpleNodeObj\n\n\n// Options type for Node\nconst xmlToSimpleNode = root => {\n  return {\n    value: root.attributes.value || root.content || root.name,\n    children: root.children.map(xmlToSimpleNode)\n  };\n};\n\nclass Node {\n\n  /**\n   * Create a `Node` from a `SimpleNode`. Applied recursively to children.\n   */\n  static fromSimpleNode(simpleNode, parent = null, position = 0) {\n    const options = {\n      position,\n      parent,\n      value: typeof simpleNode === 'string' ? simpleNode : simpleNode.value\n    };\n\n    const node = new Node(options);\n\n    if (typeof simpleNode !== 'string' && simpleNode.children) {\n      node.children = simpleNode.children.map((child, i) => Node.fromSimpleNode(child, node, i));\n    }\n\n    return node;\n  }\n\n  static fromXML(xml) {\n    const xmlRoot = (0, _xmlParser2.default)(xml);\n    const simpleRoot = xmlToSimpleNode(xmlRoot.root);\n    return Node.fromSimpleNode(simpleRoot);\n  }\n\n  /**\n   * Supply optional values based on the public properties in `Node`.\n   */\n  constructor(node) {\n    this.position = 0;\n    this.parent = null;\n    this.value = '';\n    this.children = [];\n    this.width = 0;\n    this.left = 0;\n\n    Object.assign(this, node);\n\n    this.text = new _Text2.default(this.value);\n  }\n\n  /**\n   * Get the previous sibling of the current `Node`, if exists,\n   * otherwise `null`.\n   */\n  prevSib() {\n    if (this.parent && this.position > 0) {\n      return this.parent.children[this.position - 1];\n    }\n    return null;\n  }\n\n  /**\n   * Get a level representation of the `Node` and its children. The levels\n   * are represented as a matrix of `Node`s with the first level containing\n   * a simple element, the root. Each subsequent level contains the children\n   * from _ALL_ of the nodes in the preceding level.\n   */\n  getLevels() {\n    let queue = [this];\n    const ret = [];\n    while (queue.length) {\n      ret.push(queue);\n      const temp = [];\n      queue.forEach(n => {\n        temp.splice(temp.length, n.children.length, ...n.children);\n      });\n      queue = temp;\n    }\n    return ret;\n  }\n\n  /**\n   * Iterate through all of the children of a given `Node`\n   */\n  forEachChild(visitor) {\n    const queue = [...this.children];\n    while (queue.length) {\n      const node = queue.shift();\n      visitor(node);\n      queue.splice(queue.length, node.children.length, ...node.children);\n    }\n  }\n}\nexports.default = Node;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@nindaff/ascii-tree/lib/Node.js\n// module id = 5\n// module chunks = 0","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/debug/src/browser.js\n// module id = 6\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 7\n// module chunks = 0","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/debug/src/debug.js\n// module id = 8\n// module chunks = 0","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ms/index.js\n// module id = 9\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nclass Text {\n\n  constructor(value) {\n    this.lines = value.replace(/\\t/g, ' ').split(/\\n/).map(line => line.trim()).filter(line => !!line);\n    this.width = Math.max(...this.lines.map(s => s.length));\n    this.height = this.lines.length;\n  }\n}\nexports.default = Text;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@nindaff/ascii-tree/lib/Text.js\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}